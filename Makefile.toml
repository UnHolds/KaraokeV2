[config]
default_to_workspace = false

[tasks.slang]
script_runner = "@shell"
script = '''
cd karaokeparty

if [ -x "$(command -v flutter)" ]; then
  # Generate structured language files
  dart run slang
  # Checks missing and unused translations
  dart run slang analyze
elif [ -x "$(command -v fvm)" ]; then
  fvm dart run slang
  fvm dart run slang analyze
else
  echo "dart not found"
  exit 1
fi
'''

[tasks.build-flutter]
dependencies = ["slang"]
script_runner = "@shell"
script = '''
cd karaokeparty
if [ -x "$(command -v flutter)" ]; then
  flutter build web --release --wasm
elif [ -x "$(command -v fvm)" ]; then
  fvm flutter build web --release --wasm
else
  echo "flutter not found"
  exit 1
fi

'''

[tasks.build-server]
command = "cargo"
args = ["build", "--bin", "karaoke-server", "--release"]

[tasks.serve]
command = "cargo"
args = ["run", "--bin", "karaoke-server", "--", "-c", "config.example.yaml"]

[tasks.import]
command = "cargo"
args = [
    "run",
    "--bin",
    "importer",
    "--",
    "--db",
    "songs.db",
    "-s",
    "6",
    "MasterCollection/Songs",
]
